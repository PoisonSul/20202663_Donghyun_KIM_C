#include <stdio.h>
#include <windows.h>
#include <conio.h>
#include <time.h>

#define DINO_BOTTOM_Y 12
#define TREE_BOTTOM_Y 20
#define TREE_BOTTOM_X 45
#define FALSE 0
#define TRUE 1

//색상
enum {
BLACK,					//0
DARK_BLUE,			//1
DARK_GREEN,		//2
DARK_SKYBLUE,		//3
DARK_RED,				//4
DARK_YELLOW,		//5	
GRAY,						//6
DARK_GRAY,			//7
BLUE,						//8
GREEN,					//9
SKYBLUE,				//10
RED,						//11
VIOLET,					//12
YELLOW,					//13
WHITE,						//14
};

//콘솔 텍스트 색상 변경해주는 함수
void SetColor(unsigned short text) {
	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), text);
}


//커서 On / Off
void CursorView(char show) {
	CONSOLE_CURSOR_INFO ConsoleCursor;
	ConsoleCursor.bVisible = show;
	ConsoleCursor.dwSize = 1;
	SetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE), &ConsoleCursor);
}

//콘솔 창의 크기와 제목을 지정하는 함수
void SetConsoleView() {
	//Console창의 가로 크기와 세로 크기를 지정
	system("mode con:cols=100 lines=25");
		//Console창의 제목창 표시
	system("title 창의실무프로젝트 구글 공룡 게임");
	//커서 안보이게
	CursorView(FALSE);
}

//커서의 위치를 x, y로 이동하는 함수
void GotoXY(int x, int y) {
	COORD Pos;
	Pos.X = 2 * x;
	Pos.Y = y;
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), Pos);
}

int GetKeyDown() {
	if (_kbhit() != 0) return _getch();
	return FALSE;
}

void DrawDino(int dinoY) {
	SetColor(SKYBLUE);
	GotoXY(0, dinoY);
	static int legFlag = TRUE;
	printf("        $$$$$$$ \n");
	printf("       $$ $$$$$$\n");
	printf("       $$$$$$$$$\n");
	printf("$      $$$      \n");
	printf("$$     $$$$$$$  \n");
	printf("$$$   $$$$$     \n");
	printf(" $$  $$$$$$$$$$ \n");
	printf(" $$$$$$$$$$$    \n");
	printf("  $$$$$$$$$$    \n");
	printf("    $$$$$$$$    \n");
	printf("     $$$$$$     \n");
	if (legFlag)
	{
		printf(" $$$   $$$\n");
		printf("$$$      $$$\n");
		legFlag = false;
	}
	else
	{
		printf(" $$$      $$$\n");
		printf("   $$$   $$$\n");
		legFlag = true;
	}
}

void DrawTree(int treeX)
{
	SetColor(GREEN);
	GotoXY(treeX, TREE_BOTTOM_Y);
	printf("$$$$");
	GotoXY(treeX, TREE_BOTTOM_Y + 1);
	printf("$$$$");
	GotoXY(treeX, TREE_BOTTOM_Y + 2);
	printf("$$$$");
	SetColor(DARK_YELLOW);
	GotoXY(treeX, TREE_BOTTOM_Y + 3);
	printf(" $$  ");
	GotoXY(treeX, TREE_BOTTOM_Y + 4);
	printf(" $$  ");

}


//충돌 했을때 게임오버 그려줌
void DrawGameOver(const int score) {
	//화면을 청소함
	//cls : Clean Screen의 약자.
	system("cls");
	SetColor(YELLOW);
	int x = 16, y = 8;
	GotoXY(x, y);

	printf("=================================");
	GotoXY(x, y + 1);
	printf("==========G A M E O V E R==========");
	GotoXY(x, y + 2);
	printf("=================================");
	GotoXY(x, y + 5);
	printf("SCORE : %d", score);

	printf("\n\n\n\n\n\n\n\n\n");
	system("pause");

}


	//충돌했으면 true, 아니면 false           
	int IsCollision(const int treeX, const int dinoY) {
		//트리의 x가 공룡의 몸체쪽에 있을때,
		//공룡의 높이가 충분하지 않다면 충돌로 처리
		GotoXY(0, 0);
		printf("treeX : %d, dinoY : %d", treeX, dinoY);  //이런식으로 적절한 X, Y를 찾습니다.
		if (treeX <= 8 && treeX >= 4 && dinoY > 8) return TRUE;

		return FALSE;
	}
	
	int main() {
		SetConsoleView();

		while (TRUE) {
			//게임 시작시 초기화
			int isJumping = FALSE;
			int isBottom = TRUE;
			const int gravity = 3;

			int dinoY = DINO_BOTTOM_Y;
			int treeX = TREE_BOTTOM_X;

			int score = 0;
			clock_t start, curr; //점수 변수 초기화
			start = clock();     // 시작시간 초기화

			while (TRUE) {
				if (IsCollision(treeX, dinoY)) break;

				//Space키가 눌렸고, 바닥이 아닐때 점프
				// Space Key ASCII :: 32
				if (GetKeyDown() == ' ' && isBottom) {
					isJumping = TRUE;
					isBottom = FALSE;
				}

				//점프중이라면 Y를 감소, 점프가 끝났으면 Y를 증가
				if (isJumping) dinoY -= gravity;
				else dinoY += gravity;

				//Y가 계속해서 증가하ㅡㄴ걸 막기위해 바닥을 지정.
				if (dinoY >= DINO_BOTTOM_Y) {
					dinoY = DINO_BOTTOM_Y;
					isBottom = TRUE;
				}

				//나무가 왼쪽으로 (x음수) 가도록하고
				//나무의 위치가 왼쪽 끝으로가면 다시 오른쪽 끝으로 소환
				treeX -= 2;
				if (treeX <= 0) treeX = TREE_BOTTOM_X;

				//점프의 맨위를 찍으면 점프가 끝난 상황
				if (dinoY <= 3) isJumping = FALSE;

				DrawDino(dinoY); // draw dino
				DrawTree(treeX);  // draw Tree

				curr = clock(); //현재시간 받아오기
				if (((curr - start) / CLOCKS_PER_SEC) >= 1) {			//1초가 넘었을경우
					score++;																//스코어 UP
					start = clock();														//시작시간 초기화
				}
				Sleep(30);																	//Game Speed 설정
				system("cls");															// clear

				SetColor(WHITE);

				//점수출력을 1초마다 해주는것이 아니라 항상 출력해주면서, 1초가 지났을때++
				GotoXY(22, 0); //커서를 가운데 위쪽으로 옮긴다. 콘솔창이 cols=100이니까 2*x이므로 22정도 넣어줌
				printf("Score : %d ", score);  //점수 출력해줌

				GotoXY(2, 2);
				printf("점프 : Space Key");
			}
				//게임 오버 메뉴
				DrawGameOver(score);
			}
			return FALSE;
		}
